use std::collections::HashMap;
use regex::{Regex, escape};

pub fn get_item_keywords() -> HashMap<String, Vec<Regex>> {
    let mut map = HashMap::new();
    let item_map_data = [
        ("Moldady", vec!["Moldady"]),
        ("Lowkey", vec!["Lowkey"]),
        ("Buggy Basis", vec!["Buggy Basis"]),
        ("Cherry Basics", vec!["Cherry Basics"]),
        ("Hot Spring", vec!["Hot Spring"]),
        ("Yellow Strip", vec!["Yellow Strip"]),
        ("Buggy Riddles", vec!["Buggy Riddles"]),
        ("Cherry Blades", vec!["Cherry Blades"]),
        ("Green Camo", vec!["Green Camo"]),
        ("Tiers", vec!["Tiers"]),
        ("God Dog", vec!["God Dog"]),
        ("Bug Queens", vec!["Bug Queens"]),
        ("Cherry Swift", vec!["Cherry Swift"]),
        ("Death Squad", vec!["Death Squad", "ds"]),
        ("Pink Tie Dye", vec!["Pink Tie Dye", "pink tye dye", "pink dye"]),
        ("Bug Websites", vec!["Bug Websites"]),
        ("Cherry Blues", vec!["Cherry Blues"]),
        ("Masked", vec!["Masked"]),
        ("Immersed", vec!["Immersed"]),
        ("Gradied", vec!["Gradied"]),
        ("Acid", vec!["Acid"]),
        ("Skilled", vec!["Skilled"]),
        ("Paceid", vec!["Paceid"]),
        ("Starced", vec!["Starced"]),
        ("Bronzed", vec!["Bronzed"]),
        ("Initiated", vec!["Initiated"]),
        ("Violet Habita", vec!["Violet Habita"]),
        ("Shrimpy", vec!["Shrimpy"]),
        ("Thrown", vec!["Thrown"]),
        ("Green Hollows", vec!["Green Hollows"]),
        ("Pinkys", vec!["Pinkys"]),
        ("Catz", vec!["Catz", "catz hollow"]),
        ("Smooth", vec!["Smooth"]),
        ("Purple Hollows", vec!["Purple Hollows", "purps"]),
        ("Deads", vec!["Deads"]),
        ("Pastel", vec!["Pastel"]),
        ("Washed", vec!["Washed"]),
        ("Red Hollows", vec!["Red Hollows"]),
        ("Tunic", vec!["Tunic"]),
        ("Leafy", vec!["Leafy"]),
        ("The News", vec!["The News"]),
        ("Dancing", vec!["Dancing"]),
        ("Painted Rads", vec!["Painted Rads"]),
        ("Blacks", vec!["Blacks"]),
        ("Basic Cat", vec!["Basic Cat"]),
        ("Blingy Star", vec!["Blingy Star"]),
        ("Green Basic", vec!["Green Basic"]),
        ("Compound", vec!["Compound"]),
        ("Partners", vec!["Partners"]),
        ("Mouth", vec!["Mouth"]),
        ("Beard", vec!["Beard"]),
        ("Stead", vec!["Stead"]),
        ("Growll", vec!["Growll"]),
        ("Starind", vec!["Starind"]),
        ("Pringles", vec!["Pringles"]),
        ("Hypnosis", vec!["Hypnosis"]),
        ("Feather Dance", vec!["Feather Dance"]),
        ("Amaranth", vec!["Amaranth"]),
        ("Blue Flames", vec!["Blue Flames"]),
        ("Faded", vec!["Faded"]),
        ("Blue Devils", vec!["Blue Devils"]),
        ("Wrapped Dance", vec!["Wrapped Dance"]),
        ("Deadly", vec!["Deadly"]),
        ("Diamonds", vec!["Diamonds"]),
        ("Leaves", vec!["Leaves"]),
        ("Amphibian", vec!["Amphibian"]),
        ("Don Grill", vec!["Don Grill"]),
        ("Marley", vec!["Marley"]),
        ("Black is Mind", vec!["Black is Mind"]),
        ("Kitty", vec!["Kitty"]),
        ("Cinders", vec!["Cinders"]),
        ("Piss", vec!["Piss"]),
        ("Big Head", vec!["Big Head"]),
        ("Creep", vec!["Creep"]),
        ("Heal Lumps", vec!["Heal Lumps"]),
        ("Star", vec!["Star"]),
        ("Wings", vec!["Wings"]),
        ("Smokey Lippes", vec!["Smokey Lippes"]),
        ("Broski", vec!["Broski"]),
        ("Barbed", vec!["Barbed"]),
        ("Red Hollows", vec!["Red Hollows"]),
        ("Black and Blue", vec!["Black and Blue"]),
        ("Wicked", vec!["Wicked"]),
    ];

    for (item_name, keywords) in item_map_data {
        let regexes: Vec<Regex> = keywords.into_iter()
            .map(|kw| Regex::new(&format!(r"(?i)\b{}\b", escape(kw))).unwrap())
            .collect();
        map.insert(item_name.to_string(), regexes);
    }
    map
}
